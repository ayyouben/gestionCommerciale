//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace projectONE
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GestionComercialeEntities1 : DbContext
    {
        public GestionComercialeEntities1()
            : base("name=GestionComercialeEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ArchiveStock> ArchiveStock { get; set; }
        public virtual DbSet<Article> Article { get; set; }
        public virtual DbSet<Banque> Banque { get; set; }
        public virtual DbSet<Chantier> Chantier { get; set; }
        public virtual DbSet<Charge> Charge { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Collection> Collection { get; set; }
        public virtual DbSet<CommandeAch> CommandeAch { get; set; }
        public virtual DbSet<CommandeVente> CommandeVente { get; set; }
        public virtual DbSet<config> config { get; set; }
        public virtual DbSet<DetailAchat> DetailAchat { get; set; }
        public virtual DbSet<DetailFac> DetailFac { get; set; }
        public virtual DbSet<DetailReg> DetailReg { get; set; }
        public virtual DbSet<DetailVente> DetailVente { get; set; }
        public virtual DbSet<Facture> Facture { get; set; }
        public virtual DbSet<Famille> Famille { get; set; }
        public virtual DbSet<Fichier> Fichier { get; set; }
        public virtual DbSet<Fournisseur> Fournisseur { get; set; }
        public virtual DbSet<Location> Location { get; set; }
        public virtual DbSet<ModeRG> ModeRG { get; set; }
        public virtual DbSet<Ouvrier> Ouvrier { get; set; }
        public virtual DbSet<poitage> poitage { get; set; }
        public virtual DbSet<Reglement> Reglement { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Utilisateur> Utilisateur { get; set; }
        public virtual DbSet<Voiture> Voiture { get; set; }
        public virtual DbSet<Week> Week { get; set; }
    
        public virtual ObjectResult<aff_Chantier_Result> aff_Chantier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aff_Chantier_Result>("aff_Chantier");
        }
    
        public virtual ObjectResult<aff_Charge_Result> aff_Charge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aff_Charge_Result>("aff_Charge");
        }
    
        public virtual ObjectResult<aff_Location_Result> aff_Location()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aff_Location_Result>("aff_Location");
        }
    
        public virtual ObjectResult<aff_ouvrier_Result> aff_ouvrier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aff_ouvrier_Result>("aff_ouvrier");
        }
    
        public virtual int aff_Pointage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aff_Pointage");
        }
    
        public virtual ObjectResult<aff_Vehicule_Result> aff_Vehicule()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aff_Vehicule_Result>("aff_Vehicule");
        }
    
        public virtual ObjectResult<aff_Week_Result> aff_Week()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aff_Week_Result>("aff_Week");
        }
    
        public virtual ObjectResult<Affiche_Article_Result> Affiche_Article()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Affiche_Article_Result>("Affiche_Article");
        }
    
        public virtual ObjectResult<Affiche_Client_Result> Affiche_Client()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Affiche_Client_Result>("Affiche_Client");
        }
    
        public virtual ObjectResult<Affiche_CmdA_Result> Affiche_CmdA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Affiche_CmdA_Result>("Affiche_CmdA");
        }
    
        public virtual ObjectResult<Affiche_CmdV_Result> Affiche_CmdV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Affiche_CmdV_Result>("Affiche_CmdV");
        }
    
        public virtual ObjectResult<Affiche_Facture_Result> Affiche_Facture()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Affiche_Facture_Result>("Affiche_Facture");
        }
    
        public virtual ObjectResult<Affiche_FActuree_Result> Affiche_FActuree()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Affiche_FActuree_Result>("Affiche_FActuree");
        }
    
        public virtual ObjectResult<Affiche_Famille_Result> Affiche_Famille()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Affiche_Famille_Result>("Affiche_Famille");
        }
    
        public virtual ObjectResult<Affiche_Fournisseur_Result> Affiche_Fournisseur()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Affiche_Fournisseur_Result>("Affiche_Fournisseur");
        }
    
        public virtual ObjectResult<afficher_Collection_Result> afficher_Collection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<afficher_Collection_Result>("afficher_Collection");
        }
    
        public virtual ObjectResult<afficher_Config_Result> afficher_Config()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<afficher_Config_Result>("afficher_Config");
        }
    
        public virtual ObjectResult<Afficher_DetailCmdAch_Result> Afficher_DetailCmdAch(Nullable<int> var)
        {
            var varParameter = var.HasValue ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Afficher_DetailCmdAch_Result>("Afficher_DetailCmdAch", varParameter);
        }
    
        public virtual ObjectResult<Afficher_DetailVente_Result> Afficher_DetailVente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Afficher_DetailVente_Result>("Afficher_DetailVente");
        }
    
        public virtual ObjectResult<Afficher_Fichier_Result> Afficher_Fichier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Afficher_Fichier_Result>("Afficher_Fichier");
        }
    
        public virtual ObjectResult<Afficher_ModeRG_Result> Afficher_ModeRG()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Afficher_ModeRG_Result>("Afficher_ModeRG");
        }
    
        public virtual ObjectResult<Afficher_Reglement_Result> Afficher_Reglement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Afficher_Reglement_Result>("Afficher_Reglement");
        }
    
        public virtual int Ajouter_Article(string @ref, string designation, Nullable<double> pU, Nullable<double> qteS, Nullable<int> tVA, string fardeau, string unite, Nullable<int> num_Fa)
        {
            var refParameter = @ref != null ?
                new ObjectParameter("ref", @ref) :
                new ObjectParameter("ref", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var pUParameter = pU.HasValue ?
                new ObjectParameter("PU", pU) :
                new ObjectParameter("PU", typeof(double));
    
            var qteSParameter = qteS.HasValue ?
                new ObjectParameter("QteS", qteS) :
                new ObjectParameter("QteS", typeof(double));
    
            var tVAParameter = tVA.HasValue ?
                new ObjectParameter("TVA", tVA) :
                new ObjectParameter("TVA", typeof(int));
    
            var fardeauParameter = fardeau != null ?
                new ObjectParameter("fardeau", fardeau) :
                new ObjectParameter("fardeau", typeof(string));
    
            var uniteParameter = unite != null ?
                new ObjectParameter("Unite", unite) :
                new ObjectParameter("Unite", typeof(string));
    
            var num_FaParameter = num_Fa.HasValue ?
                new ObjectParameter("Num_Fa", num_Fa) :
                new ObjectParameter("Num_Fa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Article", refParameter, designationParameter, pUParameter, qteSParameter, tVAParameter, fardeauParameter, uniteParameter, num_FaParameter);
        }
    
        public virtual int Ajouter_Banque(string nomB)
        {
            var nomBParameter = nomB != null ?
                new ObjectParameter("NomB", nomB) :
                new ObjectParameter("NomB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Banque", nomBParameter);
        }
    
        public virtual int Ajouter_Chantier(Nullable<int> id, Nullable<int> client, string adress, Nullable<double> budget, Nullable<System.DateTime> datedebut, Nullable<System.DateTime> datefin)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var adressParameter = adress != null ?
                new ObjectParameter("adress", adress) :
                new ObjectParameter("adress", typeof(string));
    
            var budgetParameter = budget.HasValue ?
                new ObjectParameter("budget", budget) :
                new ObjectParameter("budget", typeof(double));
    
            var datedebutParameter = datedebut.HasValue ?
                new ObjectParameter("datedebut", datedebut) :
                new ObjectParameter("datedebut", typeof(System.DateTime));
    
            var datefinParameter = datefin.HasValue ?
                new ObjectParameter("datefin", datefin) :
                new ObjectParameter("datefin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Chantier", idParameter, clientParameter, adressParameter, budgetParameter, datedebutParameter, datefinParameter);
        }
    
        public virtual int Ajouter_Charge(Nullable<int> num, string nom, Nullable<System.DateTime> date, Nullable<double> montant, Nullable<int> numch)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(double));
    
            var numchParameter = numch.HasValue ?
                new ObjectParameter("numch", numch) :
                new ObjectParameter("numch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Charge", numParameter, nomParameter, dateParameter, montantParameter, numchParameter);
        }
    
        public virtual int Ajouter_Client(string nomC, string ville, string adresse, string tele, string email, Nullable<double> solde, string ice)
        {
            var nomCParameter = nomC != null ?
                new ObjectParameter("NomC", nomC) :
                new ObjectParameter("NomC", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("Ville", ville) :
                new ObjectParameter("Ville", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var teleParameter = tele != null ?
                new ObjectParameter("Tele", tele) :
                new ObjectParameter("Tele", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var soldeParameter = solde.HasValue ?
                new ObjectParameter("Solde", solde) :
                new ObjectParameter("Solde", typeof(double));
    
            var iceParameter = ice != null ?
                new ObjectParameter("Ice", ice) :
                new ObjectParameter("Ice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Client", nomCParameter, villeParameter, adresseParameter, teleParameter, emailParameter, soldeParameter, iceParameter);
        }
    
        public virtual int Ajouter_CmdAchat(Nullable<int> id, Nullable<System.DateTime> datefact, string idfact, Nullable<int> numfrs)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var datefactParameter = datefact.HasValue ?
                new ObjectParameter("datefact", datefact) :
                new ObjectParameter("datefact", typeof(System.DateTime));
    
            var idfactParameter = idfact != null ?
                new ObjectParameter("idfact", idfact) :
                new ObjectParameter("idfact", typeof(string));
    
            var numfrsParameter = numfrs.HasValue ?
                new ObjectParameter("numfrs", numfrs) :
                new ObjectParameter("numfrs", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_CmdAchat", idParameter, datefactParameter, idfactParameter, numfrsParameter);
        }
    
        public virtual int Ajouter_Collection(Nullable<int> numColl, Nullable<System.DateTime> date, Nullable<int> nb, Nullable<int> nbcement, Nullable<int> week, string typeTobia, Nullable<int> nbColl, Nullable<double> prix)
        {
            var numCollParameter = numColl.HasValue ?
                new ObjectParameter("numColl", numColl) :
                new ObjectParameter("numColl", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var nbParameter = nb.HasValue ?
                new ObjectParameter("nb", nb) :
                new ObjectParameter("nb", typeof(int));
    
            var nbcementParameter = nbcement.HasValue ?
                new ObjectParameter("nbcement", nbcement) :
                new ObjectParameter("nbcement", typeof(int));
    
            var weekParameter = week.HasValue ?
                new ObjectParameter("week", week) :
                new ObjectParameter("week", typeof(int));
    
            var typeTobiaParameter = typeTobia != null ?
                new ObjectParameter("typeTobia", typeTobia) :
                new ObjectParameter("typeTobia", typeof(string));
    
            var nbCollParameter = nbColl.HasValue ?
                new ObjectParameter("nbColl", nbColl) :
                new ObjectParameter("nbColl", typeof(int));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Collection", numCollParameter, dateParameter, nbParameter, nbcementParameter, weekParameter, typeTobiaParameter, nbCollParameter, prixParameter);
        }
    
        public virtual int Ajouter_CommandeVente(Nullable<int> num_Cmd, Nullable<System.DateTime> dateCmd, Nullable<bool> isFacture, Nullable<int> num_Clt)
        {
            var num_CmdParameter = num_Cmd.HasValue ?
                new ObjectParameter("Num_Cmd", num_Cmd) :
                new ObjectParameter("Num_Cmd", typeof(int));
    
            var dateCmdParameter = dateCmd.HasValue ?
                new ObjectParameter("DateCmd", dateCmd) :
                new ObjectParameter("DateCmd", typeof(System.DateTime));
    
            var isFactureParameter = isFacture.HasValue ?
                new ObjectParameter("IsFacture", isFacture) :
                new ObjectParameter("IsFacture", typeof(bool));
    
            var num_CltParameter = num_Clt.HasValue ?
                new ObjectParameter("Num_Clt", num_Clt) :
                new ObjectParameter("Num_Clt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_CommandeVente", num_CmdParameter, dateCmdParameter, isFactureParameter, num_CltParameter);
        }
    
        public virtual int Ajouter_Config(string nomste, string domaine, byte[] logo, string adress, string tele, string rc, string patente, string iff, string cNSS, string iCE, string email, string fax, string site)
        {
            var nomsteParameter = nomste != null ?
                new ObjectParameter("Nomste", nomste) :
                new ObjectParameter("Nomste", typeof(string));
    
            var domaineParameter = domaine != null ?
                new ObjectParameter("Domaine", domaine) :
                new ObjectParameter("Domaine", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(byte[]));
    
            var adressParameter = adress != null ?
                new ObjectParameter("adress", adress) :
                new ObjectParameter("adress", typeof(string));
    
            var teleParameter = tele != null ?
                new ObjectParameter("tele", tele) :
                new ObjectParameter("tele", typeof(string));
    
            var rcParameter = rc != null ?
                new ObjectParameter("Rc", rc) :
                new ObjectParameter("Rc", typeof(string));
    
            var patenteParameter = patente != null ?
                new ObjectParameter("Patente", patente) :
                new ObjectParameter("Patente", typeof(string));
    
            var iffParameter = iff != null ?
                new ObjectParameter("Iff", iff) :
                new ObjectParameter("Iff", typeof(string));
    
            var cNSSParameter = cNSS != null ?
                new ObjectParameter("CNSS", cNSS) :
                new ObjectParameter("CNSS", typeof(string));
    
            var iCEParameter = iCE != null ?
                new ObjectParameter("ICE", iCE) :
                new ObjectParameter("ICE", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Config", nomsteParameter, domaineParameter, logoParameter, adressParameter, teleParameter, rcParameter, patenteParameter, iffParameter, cNSSParameter, iCEParameter, emailParameter, faxParameter, siteParameter);
        }
    
        public virtual int Ajouter_DetailFacture(Nullable<int> idFact, Nullable<int> idCmdV)
        {
            var idFactParameter = idFact.HasValue ?
                new ObjectParameter("IdFact", idFact) :
                new ObjectParameter("IdFact", typeof(int));
    
            var idCmdVParameter = idCmdV.HasValue ?
                new ObjectParameter("IdCmdV", idCmdV) :
                new ObjectParameter("IdCmdV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_DetailFacture", idFactParameter, idCmdVParameter);
        }
    
        public virtual int Ajouter_DetailReglement(Nullable<int> idReg, Nullable<int> idCmdV)
        {
            var idRegParameter = idReg.HasValue ?
                new ObjectParameter("IdReg", idReg) :
                new ObjectParameter("IdReg", typeof(int));
    
            var idCmdVParameter = idCmdV.HasValue ?
                new ObjectParameter("IdCmdV", idCmdV) :
                new ObjectParameter("IdCmdV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_DetailReglement", idRegParameter, idCmdVParameter);
        }
    
        public virtual int Ajouter_DetailsCmdAchat(Nullable<int> numcmd, string numart, Nullable<double> prix, Nullable<double> qte)
        {
            var numcmdParameter = numcmd.HasValue ?
                new ObjectParameter("numcmd", numcmd) :
                new ObjectParameter("numcmd", typeof(int));
    
            var numartParameter = numart != null ?
                new ObjectParameter("numart", numart) :
                new ObjectParameter("numart", typeof(string));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            var qteParameter = qte.HasValue ?
                new ObjectParameter("qte", qte) :
                new ObjectParameter("qte", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_DetailsCmdAchat", numcmdParameter, numartParameter, prixParameter, qteParameter);
        }
    
        public virtual int Ajouter_Facture(Nullable<int> id, Nullable<System.DateTime> dateFac, Nullable<double> remise, Nullable<double> tva)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dateFacParameter = dateFac.HasValue ?
                new ObjectParameter("DateFac", dateFac) :
                new ObjectParameter("DateFac", typeof(System.DateTime));
    
            var remiseParameter = remise.HasValue ?
                new ObjectParameter("Remise", remise) :
                new ObjectParameter("Remise", typeof(double));
    
            var tvaParameter = tva.HasValue ?
                new ObjectParameter("tva", tva) :
                new ObjectParameter("tva", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Facture", idParameter, dateFacParameter, remiseParameter, tvaParameter);
        }
    
        public virtual int Ajouter_Famille(string nomFamille)
        {
            var nomFamilleParameter = nomFamille != null ?
                new ObjectParameter("NomFamille", nomFamille) :
                new ObjectParameter("NomFamille", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Famille", nomFamilleParameter);
        }
    
        public virtual int Ajouter_Fichier(string desc, string fileName, Nullable<int> idCmdAch)
        {
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("fileName", fileName) :
                new ObjectParameter("fileName", typeof(string));
    
            var idCmdAchParameter = idCmdAch.HasValue ?
                new ObjectParameter("idCmdAch", idCmdAch) :
                new ObjectParameter("idCmdAch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Fichier", descParameter, fileNameParameter, idCmdAchParameter);
        }
    
        public virtual int Ajouter_Fournisseur(string nomF, string ville, string adresse, string tele, string email)
        {
            var nomFParameter = nomF != null ?
                new ObjectParameter("NomF", nomF) :
                new ObjectParameter("NomF", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("Ville", ville) :
                new ObjectParameter("Ville", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var teleParameter = tele != null ?
                new ObjectParameter("Tele", tele) :
                new ObjectParameter("Tele", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Fournisseur", nomFParameter, villeParameter, adresseParameter, teleParameter, emailParameter);
        }
    
        public virtual int Ajouter_Location(Nullable<System.DateTime> dateDebut, Nullable<System.DateTime> dateFin, string matr, Nullable<int> client, string unite, Nullable<double> montant, Nullable<double> montant_paye)
        {
            var dateDebutParameter = dateDebut.HasValue ?
                new ObjectParameter("dateDebut", dateDebut) :
                new ObjectParameter("dateDebut", typeof(System.DateTime));
    
            var dateFinParameter = dateFin.HasValue ?
                new ObjectParameter("dateFin", dateFin) :
                new ObjectParameter("dateFin", typeof(System.DateTime));
    
            var matrParameter = matr != null ?
                new ObjectParameter("matr", matr) :
                new ObjectParameter("matr", typeof(string));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var uniteParameter = unite != null ?
                new ObjectParameter("unite", unite) :
                new ObjectParameter("unite", typeof(string));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(double));
    
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Location", dateDebutParameter, dateFinParameter, matrParameter, clientParameter, uniteParameter, montantParameter, montant_payeParameter);
        }
    
        public virtual int Ajouter_ModeRG(string modalite)
        {
            var modaliteParameter = modalite != null ?
                new ObjectParameter("Modalite", modalite) :
                new ObjectParameter("Modalite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_ModeRG", modaliteParameter);
        }
    
        public virtual int Ajouter_Ouvrier(string cin, string nom, string prenom, string tele)
        {
            var cinParameter = cin != null ?
                new ObjectParameter("cin", cin) :
                new ObjectParameter("cin", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var teleParameter = tele != null ?
                new ObjectParameter("tele", tele) :
                new ObjectParameter("tele", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Ouvrier", cinParameter, nomParameter, prenomParameter, teleParameter);
        }
    
        public virtual int Ajouter_Pointage(string cin, Nullable<double> avence, string collection)
        {
            var cinParameter = cin != null ?
                new ObjectParameter("cin", cin) :
                new ObjectParameter("cin", typeof(string));
    
            var avenceParameter = avence.HasValue ?
                new ObjectParameter("avence", avence) :
                new ObjectParameter("avence", typeof(double));
    
            var collectionParameter = collection != null ?
                new ObjectParameter("collection", collection) :
                new ObjectParameter("collection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Pointage", cinParameter, avenceParameter, collectionParameter);
        }
    
        public virtual int Ajouter_Reglement(Nullable<double> montant, string numChe, Nullable<int> num_ModeReg, Nullable<int> num_Bq, Nullable<int> numreg, Nullable<double> montantDep)
        {
            var montantParameter = montant.HasValue ?
                new ObjectParameter("Montant", montant) :
                new ObjectParameter("Montant", typeof(double));
    
            var numCheParameter = numChe != null ?
                new ObjectParameter("NumChe", numChe) :
                new ObjectParameter("NumChe", typeof(string));
    
            var num_ModeRegParameter = num_ModeReg.HasValue ?
                new ObjectParameter("Num_ModeReg", num_ModeReg) :
                new ObjectParameter("Num_ModeReg", typeof(int));
    
            var num_BqParameter = num_Bq.HasValue ?
                new ObjectParameter("Num_Bq", num_Bq) :
                new ObjectParameter("Num_Bq", typeof(int));
    
            var numregParameter = numreg.HasValue ?
                new ObjectParameter("numreg", numreg) :
                new ObjectParameter("numreg", typeof(int));
    
            var montantDepParameter = montantDep.HasValue ?
                new ObjectParameter("MontantDep", montantDep) :
                new ObjectParameter("MontantDep", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Reglement", montantParameter, numCheParameter, num_ModeRegParameter, num_BqParameter, numregParameter, montantDepParameter);
        }
    
        public virtual int Ajouter_Voiture(string matricule, string model, string type)
        {
            var matriculeParameter = matricule != null ?
                new ObjectParameter("matricule", matricule) :
                new ObjectParameter("matricule", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_Voiture", matriculeParameter, modelParameter, typeParameter);
        }
    
        public virtual int Ajouter_week(Nullable<System.DateTime> dateDebut, Nullable<System.DateTime> dateFin, Nullable<double> prix)
        {
            var dateDebutParameter = dateDebut.HasValue ?
                new ObjectParameter("dateDebut", dateDebut) :
                new ObjectParameter("dateDebut", typeof(System.DateTime));
    
            var dateFinParameter = dateFin.HasValue ?
                new ObjectParameter("dateFin", dateFin) :
                new ObjectParameter("dateFin", typeof(System.DateTime));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_week", dateDebutParameter, dateFinParameter, prixParameter);
        }
    
        public virtual ObjectResult<Article_Fa_Result> Article_Fa()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Article_Fa_Result>("Article_Fa");
        }
    
        public virtual ObjectResult<Article_Non_Vendu_Result> Article_Non_Vendu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Article_Non_Vendu_Result>("Article_Non_Vendu");
        }
    
        public virtual ObjectResult<Article_Null_Qte_Result> Article_Null_Qte()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Article_Null_Qte_Result>("Article_Null_Qte");
        }
    
        public virtual ObjectResult<Chercher_Banque_Result> Chercher_Banque(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_Banque_Result>("Chercher_Banque", varParameter);
        }
    
        public virtual int Chercher_Chantier(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Chercher_Chantier", varParameter);
        }
    
        public virtual ObjectResult<Chercher_Charge_Result> Chercher_Charge(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_Charge_Result>("Chercher_Charge", varParameter);
        }
    
        public virtual ObjectResult<Chercher_collection_Result> Chercher_collection(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_collection_Result>("Chercher_collection", varParameter);
        }
    
        public virtual ObjectResult<Chercher_FActuree_Result> Chercher_FActuree(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_FActuree_Result>("Chercher_FActuree", varParameter);
        }
    
        public virtual ObjectResult<Chercher_Famille_Result> Chercher_Famille(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_Famille_Result>("Chercher_Famille", varParameter);
        }
    
        public virtual ObjectResult<chercher_Fichier_Result> chercher_Fichier(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<chercher_Fichier_Result>("chercher_Fichier", varParameter);
        }
    
        public virtual ObjectResult<Chercher_Location_Result> Chercher_Location(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_Location_Result>("Chercher_Location", varParameter);
        }
    
        public virtual ObjectResult<Chercher_Locatione_Result> Chercher_Locatione(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_Locatione_Result>("Chercher_Locatione", varParameter);
        }
    
        public virtual ObjectResult<Chercher_Ouvrier_Result> Chercher_Ouvrier(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_Ouvrier_Result>("Chercher_Ouvrier", varParameter);
        }
    
        public virtual int Chercher_Pointage(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Chercher_Pointage", varParameter);
        }
    
        public virtual ObjectResult<Chercher_Voiture_Result> Chercher_Voiture(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_Voiture_Result>("Chercher_Voiture", varParameter);
        }
    
        public virtual ObjectResult<Chercher_week_Result> Chercher_week(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chercher_week_Result>("Chercher_week", varParameter);
        }
    
        public virtual ObjectResult<Chereher_Article_Result> Chereher_Article(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chereher_Article_Result>("Chereher_Article", varParameter);
        }
    
        public virtual ObjectResult<Chereher_Client_Result> Chereher_Client(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chereher_Client_Result>("Chereher_Client", varParameter);
        }
    
        public virtual ObjectResult<Chereher_CommandeAch_Result> Chereher_CommandeAch(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chereher_CommandeAch_Result>("Chereher_CommandeAch", varParameter);
        }
    
        public virtual ObjectResult<Chereher_CommandeVente_Result> Chereher_CommandeVente(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chereher_CommandeVente_Result>("Chereher_CommandeVente", varParameter);
        }
    
        public virtual ObjectResult<Chereher_Facture_Result> Chereher_Facture(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chereher_Facture_Result>("Chereher_Facture", varParameter);
        }
    
        public virtual ObjectResult<Chereher_Fournisseur_Result> Chereher_Fournisseur(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chereher_Fournisseur_Result>("Chereher_Fournisseur", varParameter);
        }
    
        public virtual ObjectResult<Chereher_ModeRG_Result> Chereher_ModeRG(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chereher_ModeRG_Result>("Chereher_ModeRG", varParameter);
        }
    
        public virtual ObjectResult<Chereher_Reglement_Result> Chereher_Reglement(string var)
        {
            var varParameter = var != null ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Chereher_Reglement_Result>("Chereher_Reglement", varParameter);
        }
    
        public virtual ObjectResult<Client_Fa_Result> Client_Fa()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Client_Fa_Result>("Client_Fa");
        }
    
        public virtual ObjectResult<Client_fidele_Result> Client_fidele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Client_fidele_Result>("Client_fidele");
        }
    
        public virtual ObjectResult<ClientNonRegele_Result> ClientNonRegele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientNonRegele_Result>("ClientNonRegele");
        }
    
        public virtual ObjectResult<CommandeNonFacturee_Result> CommandeNonFacturee(Nullable<int> idClt)
        {
            var idCltParameter = idClt.HasValue ?
                new ObjectParameter("IdClt", idClt) :
                new ObjectParameter("IdClt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommandeNonFacturee_Result>("CommandeNonFacturee", idCltParameter);
        }
    
        public virtual int Delete_Chantier(Nullable<int> num)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Chantier", numParameter);
        }
    
        public virtual int Delete_Charge(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Charge", idParameter);
        }
    
        public virtual int Delete_Collection(string num)
        {
            var numParameter = num != null ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Collection", numParameter);
        }
    
        public virtual int Delete_Config(string nomSte)
        {
            var nomSteParameter = nomSte != null ?
                new ObjectParameter("NomSte", nomSte) :
                new ObjectParameter("NomSte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Config", nomSteParameter);
        }
    
        public virtual int Delete_Fichier(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Fichier", idParameter);
        }
    
        public virtual int Delete_Location(Nullable<int> num)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Location", numParameter);
        }
    
        public virtual int Delete_Ouvrier(string cin)
        {
            var cinParameter = cin != null ?
                new ObjectParameter("cin", cin) :
                new ObjectParameter("cin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Ouvrier", cinParameter);
        }
    
        public virtual int Delete_Pointage(Nullable<int> nump)
        {
            var numpParameter = nump.HasValue ?
                new ObjectParameter("nump", nump) :
                new ObjectParameter("nump", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Pointage", numpParameter);
        }
    
        public virtual int Delete_Voiture(string matricule)
        {
            var matriculeParameter = matricule != null ?
                new ObjectParameter("matricule", matricule) :
                new ObjectParameter("matricule", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Voiture", matriculeParameter);
        }
    
        public virtual int Delete_week(Nullable<int> num)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_week", numParameter);
        }
    
        public virtual ObjectResult<DetailCmd_Mois_Result> DetailCmd_Mois(Nullable<System.DateTime> dateDebut, Nullable<System.DateTime> dateFin)
        {
            var dateDebutParameter = dateDebut.HasValue ?
                new ObjectParameter("DateDebut", dateDebut) :
                new ObjectParameter("DateDebut", typeof(System.DateTime));
    
            var dateFinParameter = dateFin.HasValue ?
                new ObjectParameter("DateFin", dateFin) :
                new ObjectParameter("DateFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetailCmd_Mois_Result>("DetailCmd_Mois", dateDebutParameter, dateFinParameter);
        }
    
        public virtual ObjectResult<Facture1_Result> Facture1(Nullable<int> numFact)
        {
            var numFactParameter = numFact.HasValue ?
                new ObjectParameter("NumFact", numFact) :
                new ObjectParameter("NumFact", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Facture1_Result>("Facture1", numFactParameter);
        }
    
        public virtual ObjectResult<Facture2_Result> Facture2(Nullable<int> numfac, string nom)
        {
            var numfacParameter = numfac.HasValue ?
                new ObjectParameter("numfac", numfac) :
                new ObjectParameter("numfac", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Facture2_Result>("Facture2", numfacParameter, nomParameter);
        }
    
        public virtual ObjectResult<Facture3_Result> Facture3(Nullable<int> numfac)
        {
            var numfacParameter = numfac.HasValue ?
                new ObjectParameter("numfac", numfac) :
                new ObjectParameter("numfac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Facture3_Result>("Facture3", numfacParameter);
        }
    
        public virtual ObjectResult<FactureAvecRemise_Result> FactureAvecRemise(Nullable<int> numFact)
        {
            var numFactParameter = numFact.HasValue ?
                new ObjectParameter("NumFact", numFact) :
                new ObjectParameter("NumFact", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactureAvecRemise_Result>("FactureAvecRemise", numFactParameter);
        }
    
        public virtual ObjectResult<FactureBDate_Result> FactureBDate(Nullable<int> numfac, Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var numfacParameter = numfac.HasValue ?
                new ObjectParameter("numfac", numfac) :
                new ObjectParameter("numfac", typeof(int));
    
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactureBDate_Result>("FactureBDate", numfacParameter, date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<FactureClient_Result> FactureClient(Nullable<int> numclient, string numerocCheque)
        {
            var numclientParameter = numclient.HasValue ?
                new ObjectParameter("numclient", numclient) :
                new ObjectParameter("numclient", typeof(int));
    
            var numerocChequeParameter = numerocCheque != null ?
                new ObjectParameter("numerocCheque", numerocCheque) :
                new ObjectParameter("numerocCheque", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactureClient_Result>("FactureClient", numclientParameter, numerocChequeParameter);
        }
    
        public virtual ObjectResult<FacturesDetails_Result> FacturesDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturesDetails_Result>("FacturesDetails");
        }
    
        public virtual ObjectResult<string> Famille_Fa()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Famille_Fa");
        }
    
        public virtual ObjectResult<Fournisseur_Fa_Result> Fournisseur_Fa()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Fournisseur_Fa_Result>("Fournisseur_Fa");
        }
    
        public virtual ObjectResult<Get_CmdV_Result> Get_CmdV(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_CmdV_Result>("Get_CmdV", idParameter);
        }
    
        public virtual ObjectResult<Get_CommandeAch_Result> Get_CommandeAch(Nullable<int> var)
        {
            var varParameter = var.HasValue ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_CommandeAch_Result>("Get_CommandeAch", varParameter);
        }
    
        public virtual ObjectResult<Get_Fournisseur_Result> Get_Fournisseur(Nullable<int> var)
        {
            var varParameter = var.HasValue ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Fournisseur_Result>("Get_Fournisseur", varParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> get_NumCmdVente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_NumCmdVente");
        }
    
        public virtual ObjectResult<GetArticle_Result> GetArticle(Nullable<int> numArt)
        {
            var numArtParameter = numArt.HasValue ?
                new ObjectParameter("NumArt", numArt) :
                new ObjectParameter("NumArt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetArticle_Result>("GetArticle", numArtParameter);
        }
    
        public virtual ObjectResult<GetArticles_Result> GetArticles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetArticles_Result>("GetArticles");
        }
    
        public virtual ObjectResult<GetArticlesByCategory_Result> GetArticlesByCategory(Nullable<int> var)
        {
            var varParameter = var.HasValue ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetArticlesByCategory_Result>("GetArticlesByCategory", varParameter);
        }
    
        public virtual ObjectResult<GetArticleStock_Result> GetArticleStock(Nullable<int> numArt)
        {
            var numArtParameter = numArt.HasValue ?
                new ObjectParameter("NumArt", numArt) :
                new ObjectParameter("NumArt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetArticleStock_Result>("GetArticleStock", numArtParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetClientIDByCmd(Nullable<int> idCmd)
        {
            var idCmdParameter = idCmd.HasValue ?
                new ObjectParameter("IdCmd", idCmd) :
                new ObjectParameter("IdCmd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetClientIDByCmd", idCmdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetClientIDByReg(Nullable<int> idReg)
        {
            var idRegParameter = idReg.HasValue ?
                new ObjectParameter("IdReg", idReg) :
                new ObjectParameter("IdReg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetClientIDByReg", idRegParameter);
        }
    
        public virtual ObjectResult<GetCmdVById_Result> GetCmdVById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCmdVById_Result>("GetCmdVById", idParameter);
        }
    
        public virtual ObjectResult<GetCmdVById2_Result> GetCmdVById2(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCmdVById2_Result>("GetCmdVById2", idParameter);
        }
    
        public virtual ObjectResult<GetFactureByPk_Result> GetFactureByPk(Nullable<int> idFact)
        {
            var idFactParameter = idFact.HasValue ?
                new ObjectParameter("IdFact", idFact) :
                new ObjectParameter("IdFact", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFactureByPk_Result>("GetFactureByPk", idFactParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetLastCmdID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetLastCmdID");
        }
    
        public virtual ObjectResult<Nullable<int>> GetLastFacture()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetLastFacture");
        }
    
        public virtual ObjectResult<Nullable<int>> GetLastReglement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetLastReglement");
        }
    
        public virtual ObjectResult<Nullable<double>> GetMontantByCommande(Nullable<int> numCmd)
        {
            var numCmdParameter = numCmd.HasValue ?
                new ObjectParameter("NumCmd", numCmd) :
                new ObjectParameter("NumCmd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GetMontantByCommande", numCmdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> GetMontantByFacture(Nullable<double> numFac)
        {
            var numFacParameter = numFac.HasValue ?
                new ObjectParameter("numFac", numFac) :
                new ObjectParameter("numFac", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GetMontantByFacture", numFacParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> GetMontantByReg(Nullable<int> numCmd)
        {
            var numCmdParameter = numCmd.HasValue ?
                new ObjectParameter("NumCmd", numCmd) :
                new ObjectParameter("NumCmd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GetMontantByReg", numCmdParameter);
        }
    
        public virtual ObjectResult<GetRegelementByPk_Result> GetRegelementByPk(Nullable<int> idReg)
        {
            var idRegParameter = idReg.HasValue ?
                new ObjectParameter("IdReg", idReg) :
                new ObjectParameter("IdReg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRegelementByPk_Result>("GetRegelementByPk", idRegParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> IsFacturee(Nullable<int> idCmd)
        {
            var idCmdParameter = idCmd.HasValue ?
                new ObjectParameter("IdCmd", idCmd) :
                new ObjectParameter("IdCmd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("IsFacturee", idCmdParameter);
        }
    
        public virtual ObjectResult<login_user_Result> login_user(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<login_user_Result>("login_user", userNameParameter, passwordParameter);
        }
    
        public virtual int Modifier_Article(Nullable<int> num_At, string designation, Nullable<double> pU, Nullable<double> qteS, Nullable<int> tVA, string unite, Nullable<int> num_Fa)
        {
            var num_AtParameter = num_At.HasValue ?
                new ObjectParameter("Num_At", num_At) :
                new ObjectParameter("Num_At", typeof(int));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var pUParameter = pU.HasValue ?
                new ObjectParameter("PU", pU) :
                new ObjectParameter("PU", typeof(double));
    
            var qteSParameter = qteS.HasValue ?
                new ObjectParameter("QteS", qteS) :
                new ObjectParameter("QteS", typeof(double));
    
            var tVAParameter = tVA.HasValue ?
                new ObjectParameter("TVA", tVA) :
                new ObjectParameter("TVA", typeof(int));
    
            var uniteParameter = unite != null ?
                new ObjectParameter("Unite", unite) :
                new ObjectParameter("Unite", typeof(string));
    
            var num_FaParameter = num_Fa.HasValue ?
                new ObjectParameter("Num_Fa", num_Fa) :
                new ObjectParameter("Num_Fa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_Article", num_AtParameter, designationParameter, pUParameter, qteSParameter, tVAParameter, uniteParameter, num_FaParameter);
        }
    
        public virtual int Modifier_Banque(Nullable<int> num_Bq, string nomB)
        {
            var num_BqParameter = num_Bq.HasValue ?
                new ObjectParameter("Num_Bq", num_Bq) :
                new ObjectParameter("Num_Bq", typeof(int));
    
            var nomBParameter = nomB != null ?
                new ObjectParameter("NomB", nomB) :
                new ObjectParameter("NomB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_Banque", num_BqParameter, nomBParameter);
        }
    
        public virtual int Modifier_Client(Nullable<int> num_Clt, string nomC, string ville, string adresse, string tele, string email, string ice)
        {
            var num_CltParameter = num_Clt.HasValue ?
                new ObjectParameter("Num_Clt", num_Clt) :
                new ObjectParameter("Num_Clt", typeof(int));
    
            var nomCParameter = nomC != null ?
                new ObjectParameter("NomC", nomC) :
                new ObjectParameter("NomC", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("Ville", ville) :
                new ObjectParameter("Ville", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var teleParameter = tele != null ?
                new ObjectParameter("Tele", tele) :
                new ObjectParameter("Tele", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var iceParameter = ice != null ?
                new ObjectParameter("Ice", ice) :
                new ObjectParameter("Ice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_Client", num_CltParameter, nomCParameter, villeParameter, adresseParameter, teleParameter, emailParameter, iceParameter);
        }
    
        public virtual int Modifier_CommandeAch(Nullable<int> num_CmdA, Nullable<System.DateTime> dateAch, string iDFActureA, Nullable<int> num_Fr)
        {
            var num_CmdAParameter = num_CmdA.HasValue ?
                new ObjectParameter("Num_CmdA", num_CmdA) :
                new ObjectParameter("Num_CmdA", typeof(int));
    
            var dateAchParameter = dateAch.HasValue ?
                new ObjectParameter("DateAch", dateAch) :
                new ObjectParameter("DateAch", typeof(System.DateTime));
    
            var iDFActureAParameter = iDFActureA != null ?
                new ObjectParameter("IDFActureA", iDFActureA) :
                new ObjectParameter("IDFActureA", typeof(string));
    
            var num_FrParameter = num_Fr.HasValue ?
                new ObjectParameter("Num_Fr", num_Fr) :
                new ObjectParameter("Num_Fr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_CommandeAch", num_CmdAParameter, dateAchParameter, iDFActureAParameter, num_FrParameter);
        }
    
        public virtual int Modifier_CommandeVente(Nullable<int> num_CmdV, Nullable<System.DateTime> dateCmd, Nullable<int> num_Clt)
        {
            var num_CmdVParameter = num_CmdV.HasValue ?
                new ObjectParameter("Num_CmdV", num_CmdV) :
                new ObjectParameter("Num_CmdV", typeof(int));
    
            var dateCmdParameter = dateCmd.HasValue ?
                new ObjectParameter("DateCmd", dateCmd) :
                new ObjectParameter("DateCmd", typeof(System.DateTime));
    
            var num_CltParameter = num_Clt.HasValue ?
                new ObjectParameter("Num_Clt", num_Clt) :
                new ObjectParameter("Num_Clt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_CommandeVente", num_CmdVParameter, dateCmdParameter, num_CltParameter);
        }
    
        public virtual int Modifier_Facture(Nullable<int> num_Fac, Nullable<System.DateTime> dateFac, Nullable<double> remise, Nullable<bool> isGiven, Nullable<double> tva)
        {
            var num_FacParameter = num_Fac.HasValue ?
                new ObjectParameter("Num_Fac", num_Fac) :
                new ObjectParameter("Num_Fac", typeof(int));
    
            var dateFacParameter = dateFac.HasValue ?
                new ObjectParameter("DateFac", dateFac) :
                new ObjectParameter("DateFac", typeof(System.DateTime));
    
            var remiseParameter = remise.HasValue ?
                new ObjectParameter("Remise", remise) :
                new ObjectParameter("Remise", typeof(double));
    
            var isGivenParameter = isGiven.HasValue ?
                new ObjectParameter("IsGiven", isGiven) :
                new ObjectParameter("IsGiven", typeof(bool));
    
            var tvaParameter = tva.HasValue ?
                new ObjectParameter("tva", tva) :
                new ObjectParameter("tva", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_Facture", num_FacParameter, dateFacParameter, remiseParameter, isGivenParameter, tvaParameter);
        }
    
        public virtual int Modifier_Famille(Nullable<int> id, string nomFamille)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomFamilleParameter = nomFamille != null ?
                new ObjectParameter("NomFamille", nomFamille) :
                new ObjectParameter("NomFamille", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_Famille", idParameter, nomFamilleParameter);
        }
    
        public virtual int Modifier_Fournisseur(Nullable<int> num_Fr, string nomF, string ville, string adresse, string tele, string email)
        {
            var num_FrParameter = num_Fr.HasValue ?
                new ObjectParameter("Num_Fr", num_Fr) :
                new ObjectParameter("Num_Fr", typeof(int));
    
            var nomFParameter = nomF != null ?
                new ObjectParameter("NomF", nomF) :
                new ObjectParameter("NomF", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("Ville", ville) :
                new ObjectParameter("Ville", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var teleParameter = tele != null ?
                new ObjectParameter("Tele", tele) :
                new ObjectParameter("Tele", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_Fournisseur", num_FrParameter, nomFParameter, villeParameter, adresseParameter, teleParameter, emailParameter);
        }
    
        public virtual int Modifier_ModeRG(Nullable<int> num_ModeReg, string modalite)
        {
            var num_ModeRegParameter = num_ModeReg.HasValue ?
                new ObjectParameter("Num_ModeReg", num_ModeReg) :
                new ObjectParameter("Num_ModeReg", typeof(int));
    
            var modaliteParameter = modalite != null ?
                new ObjectParameter("Modalite", modalite) :
                new ObjectParameter("Modalite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_ModeRG", num_ModeRegParameter, modaliteParameter);
        }
    
        public virtual int Modifier_Reglement(Nullable<int> num_Reg, Nullable<double> montant, string numChe, Nullable<int> num_ModeReg, Nullable<int> num_Bq, Nullable<double> montantdep)
        {
            var num_RegParameter = num_Reg.HasValue ?
                new ObjectParameter("Num_Reg", num_Reg) :
                new ObjectParameter("Num_Reg", typeof(int));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("Montant", montant) :
                new ObjectParameter("Montant", typeof(double));
    
            var numCheParameter = numChe != null ?
                new ObjectParameter("NumChe", numChe) :
                new ObjectParameter("NumChe", typeof(string));
    
            var num_ModeRegParameter = num_ModeReg.HasValue ?
                new ObjectParameter("Num_ModeReg", num_ModeReg) :
                new ObjectParameter("Num_ModeReg", typeof(int));
    
            var num_BqParameter = num_Bq.HasValue ?
                new ObjectParameter("Num_Bq", num_Bq) :
                new ObjectParameter("Num_Bq", typeof(int));
    
            var montantdepParameter = montantdep.HasValue ?
                new ObjectParameter("Montantdep", montantdep) :
                new ObjectParameter("Montantdep", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modifier_Reglement", num_RegParameter, montantParameter, numCheParameter, num_ModeRegParameter, num_BqParameter, montantdepParameter);
        }
    
        public virtual ObjectResult<print_Fac_Result> print_Fac(Nullable<int> numfac, string nomSte)
        {
            var numfacParameter = numfac.HasValue ?
                new ObjectParameter("numfac", numfac) :
                new ObjectParameter("numfac", typeof(int));
    
            var nomSteParameter = nomSte != null ?
                new ObjectParameter("nomSte", nomSte) :
                new ObjectParameter("nomSte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<print_Fac_Result>("print_Fac", numfacParameter, nomSteParameter);
        }
    
        public virtual ObjectResult<print_PV_Result> print_PV(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<print_PV_Result>("print_PV", idParameter);
        }
    
        public virtual int SetCommandeFacturee(Nullable<int> idCmd)
        {
            var idCmdParameter = idCmd.HasValue ?
                new ObjectParameter("IdCmd", idCmd) :
                new ObjectParameter("IdCmd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetCommandeFacturee", idCmdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<stock_Result> stock(Nullable<int> codeArt, Nullable<System.DateTime> dateDebut, Nullable<System.DateTime> datefin)
        {
            var codeArtParameter = codeArt.HasValue ?
                new ObjectParameter("codeArt", codeArt) :
                new ObjectParameter("codeArt", typeof(int));
    
            var dateDebutParameter = dateDebut.HasValue ?
                new ObjectParameter("DateDebut", dateDebut) :
                new ObjectParameter("DateDebut", typeof(System.DateTime));
    
            var datefinParameter = datefin.HasValue ?
                new ObjectParameter("Datefin", datefin) :
                new ObjectParameter("Datefin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stock_Result>("stock", codeArtParameter, dateDebutParameter, datefinParameter);
        }
    
        public virtual int Supprimer_Article(Nullable<int> numAr)
        {
            var numArParameter = numAr.HasValue ?
                new ObjectParameter("NumAr", numAr) :
                new ObjectParameter("NumAr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_Article", numArParameter);
        }
    
        public virtual int Supprimer_Banque(Nullable<int> num_Bq)
        {
            var num_BqParameter = num_Bq.HasValue ?
                new ObjectParameter("Num_Bq", num_Bq) :
                new ObjectParameter("Num_Bq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_Banque", num_BqParameter);
        }
    
        public virtual int Supprimer_Client(Nullable<int> numCl)
        {
            var numClParameter = numCl.HasValue ?
                new ObjectParameter("NumCl", numCl) :
                new ObjectParameter("NumCl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_Client", numClParameter);
        }
    
        public virtual int Supprimer_CmdA(Nullable<int> numCmdA)
        {
            var numCmdAParameter = numCmdA.HasValue ?
                new ObjectParameter("NumCmdA", numCmdA) :
                new ObjectParameter("NumCmdA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_CmdA", numCmdAParameter);
        }
    
        public virtual int Supprimer_CmdV(Nullable<int> numCmdV)
        {
            var numCmdVParameter = numCmdV.HasValue ?
                new ObjectParameter("NumCmdV", numCmdV) :
                new ObjectParameter("NumCmdV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_CmdV", numCmdVParameter);
        }
    
        public virtual int Supprimer_DetailAchat(Nullable<int> num_Cmd, string numArt)
        {
            var num_CmdParameter = num_Cmd.HasValue ?
                new ObjectParameter("Num_Cmd", num_Cmd) :
                new ObjectParameter("Num_Cmd", typeof(int));
    
            var numArtParameter = numArt != null ?
                new ObjectParameter("NumArt", numArt) :
                new ObjectParameter("NumArt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_DetailAchat", num_CmdParameter, numArtParameter);
        }
    
        public virtual int Supprimer_DetailVente(Nullable<int> num_Cmd, string numArt)
        {
            var num_CmdParameter = num_Cmd.HasValue ?
                new ObjectParameter("Num_Cmd", num_Cmd) :
                new ObjectParameter("Num_Cmd", typeof(int));
    
            var numArtParameter = numArt != null ?
                new ObjectParameter("NumArt", numArt) :
                new ObjectParameter("NumArt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_DetailVente", num_CmdParameter, numArtParameter);
        }
    
        public virtual int Supprimer_Facture(Nullable<int> numFac)
        {
            var numFacParameter = numFac.HasValue ?
                new ObjectParameter("NumFac", numFac) :
                new ObjectParameter("NumFac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_Facture", numFacParameter);
        }
    
        public virtual int Supprimer_Famille(Nullable<int> numFa)
        {
            var numFaParameter = numFa.HasValue ?
                new ObjectParameter("NumFa", numFa) :
                new ObjectParameter("NumFa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_Famille", numFaParameter);
        }
    
        public virtual int Supprimer_Fournisseur(Nullable<int> numFr)
        {
            var numFrParameter = numFr.HasValue ?
                new ObjectParameter("NumFr", numFr) :
                new ObjectParameter("NumFr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_Fournisseur", numFrParameter);
        }
    
        public virtual int Supprimer_ModReg(Nullable<int> num_ModReg)
        {
            var num_ModRegParameter = num_ModReg.HasValue ?
                new ObjectParameter("Num_ModReg", num_ModReg) :
                new ObjectParameter("Num_ModReg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_ModReg", num_ModRegParameter);
        }
    
        public virtual int Supprimer_Reglement(Nullable<int> num_Reg)
        {
            var num_RegParameter = num_Reg.HasValue ?
                new ObjectParameter("Num_Reg", num_Reg) :
                new ObjectParameter("Num_Reg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_Reglement", num_RegParameter);
        }
    
        public virtual int Upadate_Config(string nomste, string domaine, byte[] logo, string adress, string tele, string rc, string patente, string iff, string cNSS, string iCE, string email, string fax, string site)
        {
            var nomsteParameter = nomste != null ?
                new ObjectParameter("Nomste", nomste) :
                new ObjectParameter("Nomste", typeof(string));
    
            var domaineParameter = domaine != null ?
                new ObjectParameter("Domaine", domaine) :
                new ObjectParameter("Domaine", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(byte[]));
    
            var adressParameter = adress != null ?
                new ObjectParameter("adress", adress) :
                new ObjectParameter("adress", typeof(string));
    
            var teleParameter = tele != null ?
                new ObjectParameter("tele", tele) :
                new ObjectParameter("tele", typeof(string));
    
            var rcParameter = rc != null ?
                new ObjectParameter("Rc", rc) :
                new ObjectParameter("Rc", typeof(string));
    
            var patenteParameter = patente != null ?
                new ObjectParameter("Patente", patente) :
                new ObjectParameter("Patente", typeof(string));
    
            var iffParameter = iff != null ?
                new ObjectParameter("Iff", iff) :
                new ObjectParameter("Iff", typeof(string));
    
            var cNSSParameter = cNSS != null ?
                new ObjectParameter("CNSS", cNSS) :
                new ObjectParameter("CNSS", typeof(string));
    
            var iCEParameter = iCE != null ?
                new ObjectParameter("ICE", iCE) :
                new ObjectParameter("ICE", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upadate_Config", nomsteParameter, domaineParameter, logoParameter, adressParameter, teleParameter, rcParameter, patenteParameter, iffParameter, cNSSParameter, iCEParameter, emailParameter, faxParameter, siteParameter);
        }
    
        public virtual int Update_Chantier(Nullable<int> num, Nullable<int> client, string adress, Nullable<double> budget, Nullable<System.DateTime> datedebut, Nullable<System.DateTime> datefin)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var adressParameter = adress != null ?
                new ObjectParameter("adress", adress) :
                new ObjectParameter("adress", typeof(string));
    
            var budgetParameter = budget.HasValue ?
                new ObjectParameter("budget", budget) :
                new ObjectParameter("budget", typeof(double));
    
            var datedebutParameter = datedebut.HasValue ?
                new ObjectParameter("datedebut", datedebut) :
                new ObjectParameter("datedebut", typeof(System.DateTime));
    
            var datefinParameter = datefin.HasValue ?
                new ObjectParameter("datefin", datefin) :
                new ObjectParameter("datefin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Chantier", numParameter, clientParameter, adressParameter, budgetParameter, datedebutParameter, datefinParameter);
        }
    
        public virtual int Update_Charge(Nullable<int> id, string nom, Nullable<System.DateTime> date, Nullable<double> montant, Nullable<int> numch)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(double));
    
            var numchParameter = numch.HasValue ?
                new ObjectParameter("numch", numch) :
                new ObjectParameter("numch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Charge", idParameter, nomParameter, dateParameter, montantParameter, numchParameter);
        }
    
        public virtual int Update_Collection(string num, Nullable<System.DateTime> date, Nullable<int> nb, Nullable<int> nbcement, Nullable<int> week, string typeTobia, Nullable<int> nbColl, Nullable<double> prix)
        {
            var numParameter = num != null ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var nbParameter = nb.HasValue ?
                new ObjectParameter("nb", nb) :
                new ObjectParameter("nb", typeof(int));
    
            var nbcementParameter = nbcement.HasValue ?
                new ObjectParameter("nbcement", nbcement) :
                new ObjectParameter("nbcement", typeof(int));
    
            var weekParameter = week.HasValue ?
                new ObjectParameter("week", week) :
                new ObjectParameter("week", typeof(int));
    
            var typeTobiaParameter = typeTobia != null ?
                new ObjectParameter("typeTobia", typeTobia) :
                new ObjectParameter("typeTobia", typeof(string));
    
            var nbCollParameter = nbColl.HasValue ?
                new ObjectParameter("nbColl", nbColl) :
                new ObjectParameter("nbColl", typeof(int));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Collection", numParameter, dateParameter, nbParameter, nbcementParameter, weekParameter, typeTobiaParameter, nbCollParameter, prixParameter);
        }
    
        public virtual int Update_DetailsCmdAchat(Nullable<int> numcmd, string numart, Nullable<double> prix, Nullable<double> qte)
        {
            var numcmdParameter = numcmd.HasValue ?
                new ObjectParameter("numcmd", numcmd) :
                new ObjectParameter("numcmd", typeof(int));
    
            var numartParameter = numart != null ?
                new ObjectParameter("numart", numart) :
                new ObjectParameter("numart", typeof(string));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            var qteParameter = qte.HasValue ?
                new ObjectParameter("qte", qte) :
                new ObjectParameter("qte", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_DetailsCmdAchat", numcmdParameter, numartParameter, prixParameter, qteParameter);
        }
    
        public virtual int Update_DetailsCmdAchatV2(Nullable<int> numcmd, Nullable<int> numart, Nullable<int> newart, Nullable<double> prix, Nullable<double> qte)
        {
            var numcmdParameter = numcmd.HasValue ?
                new ObjectParameter("numcmd", numcmd) :
                new ObjectParameter("numcmd", typeof(int));
    
            var numartParameter = numart.HasValue ?
                new ObjectParameter("numart", numart) :
                new ObjectParameter("numart", typeof(int));
    
            var newartParameter = newart.HasValue ?
                new ObjectParameter("Newart", newart) :
                new ObjectParameter("Newart", typeof(int));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            var qteParameter = qte.HasValue ?
                new ObjectParameter("qte", qte) :
                new ObjectParameter("qte", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_DetailsCmdAchatV2", numcmdParameter, numartParameter, newartParameter, prixParameter, qteParameter);
        }
    
        public virtual int Update_DetailsCmdVente(Nullable<int> numcmd, Nullable<int> numart, Nullable<double> prix, Nullable<double> qte, Nullable<int> tva, Nullable<double> remise)
        {
            var numcmdParameter = numcmd.HasValue ?
                new ObjectParameter("numcmd", numcmd) :
                new ObjectParameter("numcmd", typeof(int));
    
            var numartParameter = numart.HasValue ?
                new ObjectParameter("numart", numart) :
                new ObjectParameter("numart", typeof(int));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            var qteParameter = qte.HasValue ?
                new ObjectParameter("qte", qte) :
                new ObjectParameter("qte", typeof(double));
    
            var tvaParameter = tva.HasValue ?
                new ObjectParameter("tva", tva) :
                new ObjectParameter("tva", typeof(int));
    
            var remiseParameter = remise.HasValue ?
                new ObjectParameter("remise", remise) :
                new ObjectParameter("remise", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_DetailsCmdVente", numcmdParameter, numartParameter, prixParameter, qteParameter, tvaParameter, remiseParameter);
        }
    
        public virtual int Update_DetailsCmdVenteV2(Nullable<int> numcmd, Nullable<int> numart, Nullable<int> newart, Nullable<double> prix, Nullable<double> qte, Nullable<int> tva, Nullable<double> remise)
        {
            var numcmdParameter = numcmd.HasValue ?
                new ObjectParameter("numcmd", numcmd) :
                new ObjectParameter("numcmd", typeof(int));
    
            var numartParameter = numart.HasValue ?
                new ObjectParameter("numart", numart) :
                new ObjectParameter("numart", typeof(int));
    
            var newartParameter = newart.HasValue ?
                new ObjectParameter("Newart", newart) :
                new ObjectParameter("Newart", typeof(int));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            var qteParameter = qte.HasValue ?
                new ObjectParameter("qte", qte) :
                new ObjectParameter("qte", typeof(double));
    
            var tvaParameter = tva.HasValue ?
                new ObjectParameter("tva", tva) :
                new ObjectParameter("tva", typeof(int));
    
            var remiseParameter = remise.HasValue ?
                new ObjectParameter("remise", remise) :
                new ObjectParameter("remise", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_DetailsCmdVenteV2", numcmdParameter, numartParameter, newartParameter, prixParameter, qteParameter, tvaParameter, remiseParameter);
        }
    
        public virtual int Update_Fichier(Nullable<int> idfichier, string desc, string fileName, Nullable<int> idCmdAch)
        {
            var idfichierParameter = idfichier.HasValue ?
                new ObjectParameter("idfichier", idfichier) :
                new ObjectParameter("idfichier", typeof(int));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("fileName", fileName) :
                new ObjectParameter("fileName", typeof(string));
    
            var idCmdAchParameter = idCmdAch.HasValue ?
                new ObjectParameter("idCmdAch", idCmdAch) :
                new ObjectParameter("idCmdAch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Fichier", idfichierParameter, descParameter, fileNameParameter, idCmdAchParameter);
        }
    
        public virtual int Update_Location(Nullable<int> numloc, Nullable<System.DateTime> dateDebut, Nullable<System.DateTime> dateFin, string matr, Nullable<int> client, string unite, Nullable<double> montant, Nullable<double> montant_paye)
        {
            var numlocParameter = numloc.HasValue ?
                new ObjectParameter("Numloc", numloc) :
                new ObjectParameter("Numloc", typeof(int));
    
            var dateDebutParameter = dateDebut.HasValue ?
                new ObjectParameter("dateDebut", dateDebut) :
                new ObjectParameter("dateDebut", typeof(System.DateTime));
    
            var dateFinParameter = dateFin.HasValue ?
                new ObjectParameter("dateFin", dateFin) :
                new ObjectParameter("dateFin", typeof(System.DateTime));
    
            var matrParameter = matr != null ?
                new ObjectParameter("matr", matr) :
                new ObjectParameter("matr", typeof(string));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var uniteParameter = unite != null ?
                new ObjectParameter("unite", unite) :
                new ObjectParameter("unite", typeof(string));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(double));
    
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Location", numlocParameter, dateDebutParameter, dateFinParameter, matrParameter, clientParameter, uniteParameter, montantParameter, montant_payeParameter);
        }
    
        public virtual int Update_Ouvrier(string cin, string nom, string prenom, string tele)
        {
            var cinParameter = cin != null ?
                new ObjectParameter("cin", cin) :
                new ObjectParameter("cin", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var teleParameter = tele != null ?
                new ObjectParameter("tele", tele) :
                new ObjectParameter("tele", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Ouvrier", cinParameter, nomParameter, prenomParameter, teleParameter);
        }
    
        public virtual int Update_Pointage(Nullable<int> nump, string cin, Nullable<double> avence, string collection)
        {
            var numpParameter = nump.HasValue ?
                new ObjectParameter("nump", nump) :
                new ObjectParameter("nump", typeof(int));
    
            var cinParameter = cin != null ?
                new ObjectParameter("cin", cin) :
                new ObjectParameter("cin", typeof(string));
    
            var avenceParameter = avence.HasValue ?
                new ObjectParameter("avence", avence) :
                new ObjectParameter("avence", typeof(double));
    
            var collectionParameter = collection != null ?
                new ObjectParameter("collection", collection) :
                new ObjectParameter("collection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Pointage", numpParameter, cinParameter, avenceParameter, collectionParameter);
        }
    
        public virtual int Update_Voiture(string matricule, string model, string type)
        {
            var matriculeParameter = matricule != null ?
                new ObjectParameter("matricule", matricule) :
                new ObjectParameter("matricule", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Voiture", matriculeParameter, modelParameter, typeParameter);
        }
    
        public virtual int Update_week(Nullable<System.DateTime> dateDebut, Nullable<System.DateTime> dateFin, Nullable<double> prix, Nullable<int> num)
        {
            var dateDebutParameter = dateDebut.HasValue ?
                new ObjectParameter("dateDebut", dateDebut) :
                new ObjectParameter("dateDebut", typeof(System.DateTime));
    
            var dateFinParameter = dateFin.HasValue ?
                new ObjectParameter("dateFin", dateFin) :
                new ObjectParameter("dateFin", typeof(System.DateTime));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(double));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_week", dateDebutParameter, dateFinParameter, prixParameter, numParameter);
        }
    
        public virtual int UpdateIsFacturee(Nullable<bool> var, Nullable<int> numCmd)
        {
            var varParameter = var.HasValue ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(bool));
    
            var numCmdParameter = numCmd.HasValue ?
                new ObjectParameter("NumCmd", numCmd) :
                new ObjectParameter("NumCmd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateIsFacturee", varParameter, numCmdParameter);
        }
    
        public virtual int UpdateMontantByReg(Nullable<int> numCmd, Nullable<int> numReg)
        {
            var numCmdParameter = numCmd.HasValue ?
                new ObjectParameter("NumCmd", numCmd) :
                new ObjectParameter("NumCmd", typeof(int));
    
            var numRegParameter = numReg.HasValue ?
                new ObjectParameter("NumReg", numReg) :
                new ObjectParameter("NumReg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMontantByReg", numCmdParameter, numRegParameter);
        }
    
        public virtual ObjectResult<Vent_Fa_Result> Vent_Fa(Nullable<System.DateTime> var)
        {
            var varParameter = var.HasValue ?
                new ObjectParameter("Var", var) :
                new ObjectParameter("Var", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vent_Fa_Result>("Vent_Fa", varParameter);
        }
    
        public virtual int Ajouter_DetaillCmdv(Nullable<int> numCmd, string numAt, Nullable<double> qte, Nullable<double> remise, Nullable<double> prixV, Nullable<int> tVA)
        {
            var numCmdParameter = numCmd.HasValue ?
                new ObjectParameter("numCmd", numCmd) :
                new ObjectParameter("numCmd", typeof(int));
    
            var numAtParameter = numAt != null ?
                new ObjectParameter("numAt", numAt) :
                new ObjectParameter("numAt", typeof(string));
    
            var qteParameter = qte.HasValue ?
                new ObjectParameter("Qte", qte) :
                new ObjectParameter("Qte", typeof(double));
    
            var remiseParameter = remise.HasValue ?
                new ObjectParameter("Remise", remise) :
                new ObjectParameter("Remise", typeof(double));
    
            var prixVParameter = prixV.HasValue ?
                new ObjectParameter("prixV", prixV) :
                new ObjectParameter("prixV", typeof(double));
    
            var tVAParameter = tVA.HasValue ?
                new ObjectParameter("TVA", tVA) :
                new ObjectParameter("TVA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ajouter_DetaillCmdv", numCmdParameter, numAtParameter, qteParameter, remiseParameter, prixVParameter, tVAParameter);
        }
    
        public virtual ObjectResult<Dvente_Cmd_Result> Dvente_Cmd(Nullable<int> num)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dvente_Cmd_Result>("Dvente_Cmd", numParameter);
        }
    }
}
